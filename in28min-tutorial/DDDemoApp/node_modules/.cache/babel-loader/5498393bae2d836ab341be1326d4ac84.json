{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggut\\\\OneDrive\\\\Documenten\\\\GitHub\\\\Eindproject-SuperClass\\\\in28min-tutorial\\\\DDDemoApp\\\\src\\\\components\\\\DemoApp\\\\AuthenticatedRoute.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService.js'; //check if user is logged in, only then he can visit certain pages/urls\n\nclass AuthenticatedRoute extends Component {\n  render() {\n    if (AuthenticationService.isUserLoggedIn()) {\n      return React.createElement(Route, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default AuthenticatedRoute;","map":{"version":3,"sources":["C:/Users/aggut/OneDrive/Documenten/GitHub/Eindproject-SuperClass/in28min-tutorial/DDDemoApp/src/components/DemoApp/AuthenticatedRoute.jsx"],"names":["React","Component","Route","Redirect","AuthenticationService","AuthenticatedRoute","render","isUserLoggedIn","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC,C,CAEA;;AACA,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA2C;AACvCK,EAAAA,MAAM,GAAE;AACJ,QAAGF,qBAAqB,CAACG,cAAtB,EAAH,EAA0C;AACtC,aAAO,oBAAC,KAAD,oBAAW,KAAKC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAFD,MAGI;AACA,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AARsC;;AAW3C,eAAeH,kBAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\n//check if user is logged in, only then he can visit certain pages/urls\r\nclass AuthenticatedRoute extends Component {\r\n    render(){\r\n        if(AuthenticationService.isUserLoggedIn()){\r\n            return <Route {...this.props}/>\r\n        }\r\n        else{\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n    }\r\n\r\n}\r\nexport default AuthenticatedRoute"]},"metadata":{},"sourceType":"module"}