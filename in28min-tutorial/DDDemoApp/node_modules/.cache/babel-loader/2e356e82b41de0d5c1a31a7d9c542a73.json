{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggut\\\\OneDrive\\\\Documenten\\\\GitHub\\\\Eindproject-SuperClass\\\\in28min-tutorial\\\\DDDemoApp\\\\src\\\\components\\\\DemoApp\\\\AddDemoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../api/DemoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport '../../App.css';\n\nclass AddDemoComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = values => {\n      let errors = {};\n\n      if (!values.description) {\n        errors.description = \"Enter a description\";\n      } else if (values.description.length < 5) {\n        errors.description = \"Enter atleast 5 characters\";\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = \"Enter a valid date\";\n      }\n\n      return errors;\n    };\n\n    this.onSubmit = values => {\n      //console.log(values);\n      let username = AuthenticationService.getLoggedInUsername();\n      let todo = {\n        username: AuthenticationService.getLoggedInUsername(),\n        id: this.state.id,\n        description: values.description,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        TodoDataService.createTodo(username, todo // {username: AuthenticationService.getLoggedInUsername(),\n        // id: this.state.id,\n        // description: values.description, \n        // targetDate: values.targetDate}\n        ).then(() => this.props.history.push(\"/todos\"));\n      } else {\n        TodoDataService.updateTodo(username, this.state.id, todo).then(() => this.props.history.push(\"/todos\"));\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      description: \"\",\n      targetDate: moment(new Date()).format(\"YYYY-MM-DD\")\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.id === -1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUsername();\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: moment(response.data.targetDate).format(\"YYYY-MM-DD\")\n    }));\n  }\n\n  render() {\n    let _this$state = this.state,\n        description = _this$state.description,\n        targetDate = _this$state.targetDate; //let targetDate = this.state.targetDate\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"UPLOAD DEMO\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Formik // initialValues={{description: description, targetDate: targetDate}}\n    , {\n      initialValues: {\n        description,\n        targetDate\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"targetDate\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"description\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Target Date\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"date\",\n      name: \"targetDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default AddDemoComponent;","map":{"version":3,"sources":["C:/Users/aggut/OneDrive/Documenten/GitHub/Eindproject-SuperClass/in28min-tutorial/DDDemoApp/src/components/DemoApp/AddDemoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","AddDemoComponent","constructor","props","validate","values","errors","description","length","targetDate","isValid","onSubmit","username","getLoggedInUsername","todo","id","state","createTodo","then","history","push","updateTodo","match","params","Date","format","componentDidMount","retrieveTodo","response","setState","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAO,eAAP;;AAEA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AACrCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBlBC,QAtBkB,GAsBNC,MAAD,IAAY;AACnB,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAG,CAACD,MAAM,CAACE,WAAX,EAAuB;AACnBD,QAAAA,MAAM,CAACC,WAAP,GAAqB,qBAArB;AACH,OAFD,MAEO,IAAGF,MAAM,CAACE,WAAP,CAAmBC,MAAnB,GAA0B,CAA7B,EAA+B;AAClCF,QAAAA,MAAM,CAACC,WAAP,GAAqB,4BAArB;AACH;;AAAC,UAAG,CAACb,MAAM,CAACW,MAAM,CAACI,UAAR,CAAN,CAA0BC,OAA1B,EAAJ,EAAyC;AACvCJ,QAAAA,MAAM,CAACG,UAAP,GAAoB,oBAApB;AACH;;AACD,aAAOH,MAAP;AACH,KAhCiB;;AAAA,SAiClBK,QAjCkB,GAiCNN,MAAD,IAAW;AAClB;AACA,UAAIO,QAAQ,GAAGZ,qBAAqB,CAACa,mBAAtB,EAAf;AACA,UAAIC,IAAI,GAAG;AAACF,QAAAA,QAAQ,EAAEZ,qBAAqB,CAACa,mBAAtB,EAAX;AACCE,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWD,EADhB;AAECR,QAAAA,WAAW,EAAEF,MAAM,CAACE,WAFrB;AAGCE,QAAAA,UAAU,EAAEJ,MAAM,CAACI;AAHpB,OAAX;;AAKA,UAAG,KAAKO,KAAL,CAAWD,EAAX,KAAgB,CAAC,CAApB,EAAsB;AAClBhB,QAAAA,eAAe,CAACkB,UAAhB,CAA2BL,QAA3B,EAAqCE,IAArC,CACA;AACA;AACA;AACA;AAJA,UAMKI,IANL,CAMU,MAAM,KAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CANhB;AAOH,OARD,MAQK;AACDrB,QAAAA,eAAe,CAACsB,UAAhB,CAA2BT,QAA3B,EAAqC,KAAKI,KAAL,CAAWD,EAAhD,EAAoDD,IAApD,EACKI,IADL,CACU,MAAM,KAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CADhB;AAEH;AACJ,KArDiB;;AAEd,SAAKJ,KAAL,GAAa;AACTD,MAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWmB,KAAX,CAAiBC,MAAjB,CAAwBR,EADnB;AAETR,MAAAA,WAAW,EAAE,EAFJ;AAGTE,MAAAA,UAAU,EAAGf,MAAM,CAAC,IAAI8B,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B;AAHJ,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AACnB,QAAG,KAAKV,KAAL,CAAWD,EAAX,KAAgB,CAAC,CAApB,EAAsB;AAClB;AACH;;AAEG,QAAIH,QAAQ,GAAGZ,qBAAqB,CAACa,mBAAtB,EAAf;AACAd,IAAAA,eAAe,CAAC4B,YAAhB,CAA6Bf,QAA7B,EAAuC,KAAKI,KAAL,CAAWD,EAAlD,EACCG,IADD,CACMU,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAC5BtB,MAAAA,WAAW,EAAEqB,QAAQ,CAACE,IAAT,CAAcvB,WADC;AAE5BE,MAAAA,UAAU,EAAGf,MAAM,CAACkC,QAAQ,CAACE,IAAT,CAAcrB,UAAf,CAAN,CAAiCgB,MAAjC,CAAwC,YAAxC;AAFe,KAAd,CADlB;AAKH;;AAmCDM,EAAAA,MAAM,GAAE;AAAA,sBAC4B,KAAKf,KADjC;AAAA,QACCT,WADD,eACCA,WADD;AAAA,QACcE,UADd,eACcA,UADd,EAEJ;;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADG,EAEH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD,CACI;AADJ;AAEI,MAAA,aAAa,EAAE;AAACF,QAAAA,WAAD;AAAcE,QAAAA;AAAd,OAFnB;AAGI,MAAA,QAAQ,EAAE,KAAKE,QAHnB;AAII,MAAA,gBAAgB,EAAE,KAJtB;AAKI,MAAA,cAAc,EAAE,KALpB;AAMI,MAAA,QAAQ,EAAE,KAAKP,QANnB;AAOI,MAAA,kBAAkB,EAAE,IAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASMD,KAAD,IACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,SAAS,EAAC,KAA3C;AAAiD,MAAA,SAAS,EAAC,qBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,SAAS,EAAC,KAA1C;AAAgD,MAAA,SAAS,EAAC,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAHJ,EAOI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPJ,EAWI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CAVR,CADJ,CAFG,CAAP;AA8BH;;AA1FoC;;AA6FzC,eAAeF,gBAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\r\nimport TodoDataService from '../api/DemoDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport '../../App.css'\r\n\r\nclass AddDemoComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            description: \"\",\r\n            targetDate : moment(new Date()).format(\"YYYY-MM-DD\")\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n    if(this.state.id===-1){\r\n        return\r\n    }\r\n\r\n        let username = AuthenticationService.getLoggedInUsername()\r\n        TodoDataService.retrieveTodo(username, this.state.id)\r\n        .then(response => this.setState({\r\n            description: response.data.description,\r\n            targetDate : moment(response.data.targetDate).format(\"YYYY-MM-DD\")\r\n        }))\r\n    }\r\n\r\n    validate = (values) => {\r\n        let errors = {}\r\n        if(!values.description){\r\n            errors.description = \"Enter a description\"\r\n        } else if(values.description.length<5){\r\n            errors.description = \"Enter atleast 5 characters\"\r\n        } if(!moment(values.targetDate).isValid()) {\r\n            errors.targetDate = \"Enter a valid date\"\r\n        }\r\n        return errors;\r\n    }\r\n    onSubmit = (values) =>{\r\n        //console.log(values);\r\n        let username = AuthenticationService.getLoggedInUsername()\r\n        let todo = {username: AuthenticationService.getLoggedInUsername(),\r\n                    id: this.state.id,\r\n                    description: values.description, \r\n                    targetDate: values.targetDate}\r\n\r\n        if(this.state.id===-1){\r\n            TodoDataService.createTodo(username, todo\r\n            // {username: AuthenticationService.getLoggedInUsername(),\r\n            // id: this.state.id,\r\n            // description: values.description, \r\n            // targetDate: values.targetDate}\r\n            )\r\n                .then(() => this.props.history.push(\"/todos\"))\r\n        }else{\r\n            TodoDataService.updateTodo(username, this.state.id, todo)\r\n                .then(() => this.props.history.push(\"/todos\"))\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {description, targetDate} = this.state\r\n        //let targetDate = this.state.targetDate\r\n\r\n        return <div>\r\n            <h1 className=\"title\">UPLOAD DEMO</h1>\r\n            <div className=\"container\">\r\n                <Formik                     \r\n                    // initialValues={{description: description, targetDate: targetDate}}\r\n                    initialValues={{description, targetDate}}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >        \r\n                    {(props) => (\r\n                        <Form>\r\n                            <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\r\n                            <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\r\n                            <fieldset className=\"form-group\">\r\n                                <label>description</label>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                            </fieldset>\r\n                            <fieldset className=\"form-group\">\r\n                                <label>Target Date</label>\r\n                                <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\r\n                            </fieldset>\r\n                            <button className=\"button\" type=\"submit\">Save</button>\r\n                        </Form>                        \r\n                    )}\r\n                </Formik>                \r\n            </div>            \r\n        </div>\r\n    }    \r\n}\r\n\r\nexport default AddDemoComponent"]},"metadata":{},"sourceType":"module"}